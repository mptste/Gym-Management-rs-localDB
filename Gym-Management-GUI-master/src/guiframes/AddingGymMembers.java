/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package guiframes;

import com.formdev.flatlaf.intellijthemes.materialthemeuilite.FlatMaterialLighterIJTheme;
import databaseConnection.DatabaseConnection;

import java.awt.HeadlessException;
import java.awt.print.PrinterException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.attribute.HashPrintRequestAttributeSet;
import javax.print.attribute.PrintRequestAttributeSet;
import javax.print.attribute.standard.OrientationRequested;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 * @author pc
 */
public class AddingGymMembers extends javax.swing.JFrame {

    /**
     * Creates new form AddingGymMembers
     */
    public AddingGymMembers() throws ParseException {
        initComponents();
        showrec();
    }

    private void clear() {
        namesurnamefield.setText("");
        membershipstartfield.setCalendar(null);
        membershipendfield.setCalendar(null);
        feepaidfield.setText("");
        feeowedfield.setText("");
    }

    public void showrec() throws ParseException {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
        UIManager.put("OptionPane.okButtonText", "U redu");

        try {
            String query = "SELECT * FROM members_table";
            PreparedStatement pst = DatabaseConnection.getConnection().prepareStatement(query);
            ResultSet rs = pst.executeQuery();

            // Set column header alignment to center
            ((DefaultTableCellRenderer) jTable1.getTableHeader().getDefaultRenderer())
                    .setHorizontalAlignment(JLabel.CENTER);

            while (rs.next()) {
                Object[] row = new Object[6];
                row[0] = rs.getInt("id");
                row[1] = rs.getString("name_surname");
                row[2] = new SimpleDateFormat("dd-MM-yyyy")
                        .format(new SimpleDateFormat("yyyy-MM-dd")
                                .parse(rs.getString("memb_begin")));
                row[3] = new SimpleDateFormat("dd-MM-yyyy")
                        .format(new SimpleDateFormat("yyyy-MM-dd")
                                .parse(rs.getString("memb_end")));
                row[4] = rs.getInt("fee_paid");
                row[5] = rs.getInt("fee_topay");

                // Set cell alignment to center
                DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
                centerRenderer.setHorizontalAlignment(JLabel.CENTER);
                for (int i = 0; i < row.length; i++) {
                    jTable1.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
                }

                model.addRow(row);
            }
            pst.close();
            rs.close();

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                    e + "\nPrikaz iz baze podataka neuspešan",
                    "",
                    JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        namesurnamefield = new javax.swing.JTextField();
        logoutbutton = new javax.swing.JButton();
        resetbutton = new javax.swing.JButton();
        submitbutton = new javax.swing.JButton();
        updatebutton = new javax.swing.JButton();
        deletebutton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        searchbutton = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        membershipstartfield = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        membershipendfield = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        feepaidfield = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        feeowedfield = new javax.swing.JTextField();
        exporttopdfbutton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null, null, null},
                        {null, null, null, null, null, null},
                        {null, null, null, null, null, null},
                        {null, null, null, null, null, null}
                },
                new String[]{
                        "ID", "Ime i prezime", "Početak članarine", "Istek članarine", "Uplaćeno", "Dugovanje"
                }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iconmember.PNG"))); // NOI18N

        jLabel2.setText("Dodavanje novog člana");

        jLabel4.setText("Ime i prezime:");

        logoutbutton.setText("Odjava");
        logoutbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutbuttonMouseClicked(evt);
            }
        });

        resetbutton.setText("Obriši polja");
        resetbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetbuttonMouseClicked(evt);
            }
        });

        submitbutton.setText("Dodavanje člana");
        submitbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitbuttonMouseClicked(evt);
            }
        });

        updatebutton.setText("Ispravka podataka");
        updatebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatebuttonMouseClicked(evt);
            }
        });

        deletebutton.setText("Brisanje člana");
        deletebutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletebuttonMouseClicked(evt);
            }
        });

        jLabel13.setText("Pretraga:");

        searchbutton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchbuttonKeyReleased(evt);
            }
        });

        jLabel5.setText("Početak članarine:");

        jLabel7.setText("Istek članarine:");

        jLabel3.setText("Uplaćeno:");

        jLabel8.setText("Dugovanje:");

        exporttopdfbutton.setText("U PDF dokument");
        exporttopdfbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exporttopdfbuttonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jScrollPane1)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel1)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel13)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(searchbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel2)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                                        .addComponent(namesurnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                        .addComponent(membershipstartfield, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                .addGap(41, 41, 41)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addComponent(jLabel3)
                                                                                                .addGap(18, 18, 18)
                                                                                                .addComponent(feepaidfield, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                                        .addGroup(layout.createSequentialGroup()
                                                                                                .addComponent(jLabel8)
                                                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                                .addComponent(feeowedfield)))
                                                                                .addGap(20, 20, 20)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(deletebutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(submitbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(updatebutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                                .addGap(18, 18, 18)
                                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                                        .addComponent(resetbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(logoutbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                                        .addComponent(exporttopdfbutton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                                        .addComponent(membershipendfield, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jLabel4)
                                                        .addComponent(namesurnamefield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jLabel3)
                                                        .addComponent(feepaidfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(submitbutton)
                                                        .addComponent(logoutbutton))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(updatebutton)
                                                                .addComponent(jLabel8)
                                                                .addComponent(feeowedfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(resetbutton)
                                                                .addComponent(jLabel5))
                                                        .addComponent(membershipstartfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(deletebutton)
                                                                .addComponent(exporttopdfbutton)
                                                                .addComponent(jLabel7))
                                                        .addComponent(membershipendfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel13)
                                        .addComponent(searchbutton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void logoutbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutbuttonMouseClicked
        // TODO add your handling code here:
        StartMenu sm = new StartMenu();
        sm.setVisible(true);
        setVisible(false);
    }//GEN-LAST:event_logoutbuttonMouseClicked

    private void resetbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetbuttonMouseClicked
        // TODO add your handling code here:
        clear();
    }//GEN-LAST:event_resetbuttonMouseClicked

    private void searchbuttonKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchbuttonKeyReleased
        // TODO add your handling code here:
        DefaultTableModel dtbm = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(dtbm);
        jTable1.setRowSorter(trs);
        String searchTerm = searchbutton.getText();
        trs.setRowFilter(RowFilter.regexFilter("(?i)" + searchTerm)); // use case-insensitive regex pattern
    }//GEN-LAST:event_searchbuttonKeyReleased

    private void submitbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitbuttonMouseClicked
        // TODO add your handling code here:
        if (namesurnamefield.getText().isEmpty()
                || membershipstartfield.getDate() == null || membershipendfield.getDate() == null
                || feeowedfield.getText().isEmpty() || feepaidfield.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Neuspešno dodavanje, popunite sva polja",
                    "",
                    JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                String query = "INSERT INTO members_table (name_surname, memb_begin, memb_end, fee_paid, fee_topay) VALUES(?,?,?,?,?)";
                PreparedStatement pst = DatabaseConnection.getConnection().prepareStatement(query);

                pst.setString(1, namesurnamefield.getText());
                pst.setString(2, DateTimeFormatter.ISO_LOCAL_DATE.
                        format(membershipstartfield.getDate()
                                .toInstant()
                                .atZone(ZoneId.systemDefault())
                                .toLocalDate()));
                pst.setString(3, DateTimeFormatter.ISO_LOCAL_DATE
                        .format(membershipendfield.getDate()
                                .toInstant()
                                .atZone(ZoneId.systemDefault())
                                .toLocalDate()));
                pst.setInt(4, Integer.parseInt(feepaidfield.getText()));
                pst.setInt(5, Integer.parseInt(feeowedfield.getText()));

                int row = pst.executeUpdate();
                JOptionPane.showMessageDialog(this,
                        "Član uspešno dodat",
                        "",
                        JOptionPane.INFORMATION_MESSAGE);
                pst.close();
                showrec();
                clear();

            } catch (HeadlessException | NumberFormatException | SQLException e) {
                JOptionPane.showMessageDialog(this,
                        e + "\nDodavanje člana nije uspelo",
                        "",
                        JOptionPane.ERROR_MESSAGE);
            } catch (ParseException ex) {
                Logger.getLogger(AddingGymMembers.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_submitbuttonMouseClicked

    private void updatebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatebuttonMouseClicked
        // TODO add your handling code here:
        try {
            String query = "UPDATE members_table SET name_surname = ?, memb_begin = ?, memb_end = ?, fee_paid = ?, fee_topay = ? WHERE id = ?";
            PreparedStatement pst = DatabaseConnection.getConnection().prepareStatement(query);

            int selectedRow = jTable1.getSelectedRow();
            int id = Integer.parseInt(jTable1.getModel().getValueAt(selectedRow, 0).toString());

            pst.setString(1, namesurnamefield.getText());
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String memb_begin = sdf.format(membershipstartfield.getDate());
            pst.setString(2, memb_begin);
            String memb_end = sdf.format(membershipendfield.getDate());
            pst.setString(3, memb_end);
            pst.setInt(4, Integer.parseInt(feepaidfield.getText()));
            pst.setInt(5, Integer.parseInt(feeowedfield.getText()));
            pst.setInt(6, id);

            pst.executeUpdate();
            showrec();
            clear();

            JOptionPane.showMessageDialog(this,
                    "Ispravka podataka uspešna",
                    "",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (NumberFormatException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        } catch (ParseException ex) {
            Logger.getLogger(AddingGymMembers.class.getName())
                    .log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_updatebuttonMouseClicked

    private void deletebuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletebuttonMouseClicked
        // TODO add your handling code here:

        UIManager.put("OptionPane.yesButtonText", "Da");
        UIManager.put("OptionPane.noButtonText", "Ne");

        int delete = JOptionPane.showConfirmDialog(null,
                "Da li sigurno želite da obrišete podatke?",
                "",
                JOptionPane.YES_NO_OPTION);
        if (delete == 0) {
            try {
                int row = jTable1.getSelectedRow();
                String value = jTable1.getModel().getValueAt(row, 0).toString();
                String query = "DELETE FROM members_table WHERE id =" + value;
                PreparedStatement pst = DatabaseConnection.getConnection().prepareStatement(query);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null,
                        "Uspešno obrisano",
                        "",
                        JOptionPane.INFORMATION_MESSAGE);
                showrec();

            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(null, e);

            } catch (ParseException ex) {
                Logger.getLogger(AddingGymMembers.class
                                .getName())
                        .log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_deletebuttonMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:

        int i = jTable1.getSelectedRow();
        TableModel model = jTable1.getModel();

        namesurnamefield.setText(model.getValueAt(i, 1).toString());

        try {
            int srow = jTable1.getSelectedRow();

            String membStartStr = (String) model.getValueAt(srow, 2);
            String membEndStr = (String) model.getValueAt(srow, 3);

            SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");

            Date datemembst = dateFormat.parse(membStartStr);
            Date datemembend = dateFormat.parse(membEndStr);

            membershipstartfield.setDate(datemembst);
            membershipendfield.setDate(datemembend);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        feepaidfield.setText(model.getValueAt(i, 4).toString());
        feeowedfield.setText(model.getValueAt(i, 5).toString());

    }//GEN-LAST:event_jTable1MouseClicked

    private void exporttopdfbuttonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exporttopdfbuttonMouseClicked
        // TODO add your handling code here:
        MessageFormat header = new MessageFormat("Lista članova");
        MessageFormat footer = new MessageFormat("1");

        try {
            PrintRequestAttributeSet set = new HashPrintRequestAttributeSet();
            set.add(OrientationRequested.LANDSCAPE);
            jTable1.print(JTable.PrintMode.FIT_WIDTH,
                    header,
                    footer,
                    true,
                    set,
                    true);
            JOptionPane.showMessageDialog(null,
                    "Uspešno izvezeno u PDF",
                    "",
                    JOptionPane.INFORMATION_MESSAGE);
        } catch (HeadlessException | PrinterException e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }//GEN-LAST:event_exporttopdfbuttonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddingGymMembers.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddingGymMembers.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddingGymMembers.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddingGymMembers.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        try {
            UIManager.setLookAndFeel(new FlatMaterialLighterIJTheme());
        } catch (UnsupportedLookAndFeelException ex) {
            System.err.println("Failed to initialize LaF");
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new AddingGymMembers().setVisible(true);

                } catch (ParseException ex) {
                    Logger.getLogger(AddingGymMembers.class
                                    .getName())
                            .log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deletebutton;
    private javax.swing.JButton exporttopdfbutton;
    private javax.swing.JTextField feeowedfield;
    private javax.swing.JTextField feepaidfield;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logoutbutton;
    private com.toedter.calendar.JDateChooser membershipendfield;
    private com.toedter.calendar.JDateChooser membershipstartfield;
    private javax.swing.JTextField namesurnamefield;
    private javax.swing.JButton resetbutton;
    private javax.swing.JTextField searchbutton;
    private javax.swing.JButton submitbutton;
    private javax.swing.JButton updatebutton;
    // End of variables declaration//GEN-END:variables
}
